name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Docker
        run: |
          sudo apt install -y apt-transport-https ca-certificates curl software-properties-common tree
          sudo apt update
          sudo apt install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build Docker images
        run: sudo docker-compose -f docker-compose.yml build

      - name: Run Docker containers
        run: sudo docker-compose -f docker-compose.yml up -d

      - name: Wait for services ready
        run: |
          echo "Waiting for services..."
          # ждём порты до таймаута, проверяем health URL-ы вместо жесткого sleep
          for i in {1..30}; do
            if curl -sSf http://localhost:8000/ >/dev/null && curl -sSf http://localhost:8001/ >/dev/null; then
              echo "Services are up"; break
            fi
            echo "waiting... ($i)"
            sleep 3
          done

      - name: Run Unit Tests (use run --rm)
        run: |
          # запускаем временный контейнер на базе собранного образа
          docker-compose run --rm user_service pytest -q || (docker-compose logs user_service && exit 1)
          docker-compose run --rm vector_service pytest -q || (docker-compose logs vector_service && exit 1)

      - name: Run Integration Tests
        run: |
          docker-compose run --rm user_service pytest tests/integration -q || (docker-compose logs user_service && exit 1)
          docker-compose run --rm vector_service pytest tests/integration -q || (docker-compose logs vector_service && exit 1)

      - name: Run E2E Tests
        run: |
          # E2E — делаем реальный HTTP запрос к запущенному сервису
          sleep 5
          docker-compose run --rm vector_service pytest tests/e2e -q || (docker-compose logs vector_service && exit 1)

      - name: Show logs on failure
        if: failure()
        run: |
          sudo docker-compose logs

      - name: Stop Docker containers
        run: sudo docker-compose -f docker-compose.yml down